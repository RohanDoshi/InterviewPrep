
public class EightQueensProblem {

	public static void main(String args[]) {
		EightQueen eightQueen = new EightQueen(8);
		eightQueen.solve();
	}
}

class EightQueen {
	
	Queen[][] chessBoard = null;
	
	Queen[] queens = null; 

 	public EightQueen(int size) {
		chessBoard = new Queen[size][size];
		queens = new Queen[size];
	}
 	
 	public void solve() {
 		
 		int currRow = 0;
 		int currCol = 0;
 		int currQueen = 0;
 		
 		solve1(currRow, currCol, currQueen);
 		print();
 		
 	}
 	
 	private void solve1(int currRow, int currCol, int currQueen) {
 		
 		int n = chessBoard.length;
 		if(currQueen < n) {
 			if(queens[currQueen] == null) {
 				Queen q = new Queen();
 				q.row = currRow;
 				q.col = currCol;
 				queens[currQueen] = q;
 				solve1(currRow, currCol + 1, currQueen+1);
 			} else { 
 				if(!checkIsOk(currRow, currCol, currQueen)) {
 					solve1(currRow+1, currCol, currQueen);
 				} else {
 					Queen q = new Queen();
 					q.row = currRow;
 					q.col = currCol;
 					queens[currQueen] = q;
 					solve1(0, currCol + 1, currQueen+1);
 				}	
 			}
 		}
 	}
 	
 	private boolean checkIsOk(int currRow, int currCol, int currQueen) {
 		
 		for(int k=0; k<currQueen; k++) {
			if(currRow == queens[k].row || currCol == queens[k].col || !checkDiagUpIsOk(currRow, currCol, queens[k].row, queens[k].col) || 
					!checkDiagDownIsOk(currRow, currCol, queens[k].row, queens[k].col) ) {
				return false;
			}
		}
 		
 		return true;
 	}
 	
 	private boolean checkDiagUpIsOk(int currRow, int currCol, int qRow, int qCol) {
 		int n = chessBoard.length;
 		int r = qRow;
 		for(int i = qCol; i<n && r < n; i++) {
 			if(currRow == ++r && currCol == i) {
 				return false;
 			}
 		}
 		return true;
 	}
 	
 	
 	private boolean checkDiagDownIsOk(int currRow, int currCol, int qRow, int qCol) {
 		int n = chessBoard.length;
 		int r = qRow;
 		for(int i = qCol; i<n && r > 0; i++) {
 			if(currRow == --r && currCol == i) {
 				return false;
 			}
 		}
 		return true;
 	}
 	
 	private void print() {
 		int n = chessBoard.length;
 		for(int i=0; i<n; i++) {
 			for(int j=0; j<n; j++) {
 				if(queens[i].col == j) {
 					System.out.print(1+" ");
 				} else {
 					System.out.print(0+" ");
 				}
 			}
 			System.out.println();
 		}
 	}
 	
 	
}

class Queen {
	int row;
	int col;
}