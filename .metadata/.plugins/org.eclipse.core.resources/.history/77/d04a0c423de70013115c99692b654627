package com.aol.sportal.servlets;

import java.io.IOException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;

import com.aol.cc.common.biz.CCBizAccount;
import com.aol.cc.common.biz.CCBizSubAccount;
import com.aol.sportal.beans.ScreenNames;
import com.aol.sportal.model.AccountInformationModel;
import com.aol.sportal.util.AccountAccess;

public class ScreenNameMainLCA extends ScreenNameMain {
	private static final Logger logger = Logger.getLogger(ScreenNameMainLCA.class);
    public void doGet(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
		
        if (AccountAccess.isMorf(request)) {
            response.sendRedirect("contact_new.jsp");
            return;
        }
        if (AccountAccess.isMasterAccount(request)==false) {
            AccountAccess.dispatchJsp(request, response, "screen_names_sub.jsp");
            return;
        }
		
        long performancestarttime = System.currentTimeMillis();
        boolean isMasterSnOnly = AccountAccess.getLoginItem(request,"mst_acct_number").equals(AccountAccess.getLoginItem(request,"sub_acct_number"));
		
        AccountInformationModel acctObj = AccountAccess.getAcctObj(request, response);
        CCBizAccount bizAcct = acctObj.getAccount();
        CCBizSubAccount[] subs = bizAcct.getSubAccounts();
		
        String primarySN = bizAcct.getScreenName().getAolScreenName();
        boolean justAsq = AccountAccess.getAcctData(request, response).justCreateAsq(request, response);
        String cdnurlprefix = AccountAccess.getCdnUrl(request);
		
        String sn;
        String changepwString;
        String storedpwString = "";
        String [] alt ={""," class='alt'"};
        short snIndex = 0;
        String displayName = "";
        String changeDisplayName = "";
        String snStatus = "";
		
        boolean displayStoredPassword = isMasterSnOnly == false && AccountAccess.isInClient(request);

        StringBuilder snListSB = new StringBuilder(1024);		
        if (subs != null) {
            for (snIndex = 0; snIndex<subs.length; snIndex++) {
                //SPortalSession.getLogger().error(bizAcct.getAccountNumber()+", sub:"+subs[snIndex].getAcctNumber()+", SN:"+subs[snIndex].getScreenName().getAolScreenName());
                if (bizAcct.getAccountNumber() == subs[snIndex].getAcctNumber()) 
                    continue; //primarySN = subs[snIndex].getScreenName().getAolScreenName();
                else {
                    sn = subs[snIndex].getScreenName().getAolScreenName();
                    if (justAsq == false || sn.equalsIgnoreCase(AccountAccess.getLoginItem(request,"Username"))) {
                        changepwString = "<a href='ChangePassword?fw=names&sn=" + URLEncoder.encode(sn, "UTF-8")
                            + "'>Change<b class='hidden'> Password for " + sn + "</b></a>";		
                    } else {
                        changepwString="&nbsp;";
                    }
    				
                    if (displayStoredPassword) {
                        if (sn.equalsIgnoreCase(AccountAccess.getLoginItem(request,"Username"))) {
                            storedpwString = "<td style='text-align:center;' headers='Edit Stored Password Options'><a href=\"aol://1722:StoredPassword/\" >Edit Options<b class='hidden'> for " + sn + "</b></a></td>";
                        } else {
                            storedpwString = "<td headers='Edit Stored Password Options'>&nbsp;</td>";
                        }
                    }
                    displayName = AccountAccess.getAcctData(request, response).getDisplayName(request, response, sn);
                    if (displayName == null || displayName.length() == 0) {
                        displayName = "";
                        changeDisplayName = "<a href=ChangeDisplayName?sn=" + URLEncoder.encode(sn, "UTF-8") 
                            + ">Add Display Name<b class='hidden'> for " + sn + "</b></a>";
                    } else
                        changeDisplayName = " <a href=ChangeDisplayName?sn=" + URLEncoder.encode(sn, "UTF-8") 
                            + ">(Change)<b class='hidden'> Display Name for " + sn + "</b></a>";
                    snStatus = AccountAccess.getSnStatusString(sn, request, response);
    			
                    snListSB.append("<tr").append(alt[snIndex%2]).append(">");
                    snListSB.append("<td headers='Screen Name' class='sn' title=\"").append(sn).append("\">").append(AccountAccess.processScreenNameLength(sn, 30)).append("</td>");
                    snListSB.append("<td headers='Display Name' class='sn' title=\"").append(displayName).append("\">");
                    snListSB.append(AccountAccess.processScreenNameLength(displayName, 20));
                    snListSB.append(changeDisplayName).append("</td>");
                    snListSB.append("<td headers='Change Password' style='text-align:center;' class='pw'>").append(changepwString).append("</td>");
                    snListSB.append(storedpwString);
                    snListSB.append("<td headers='Delete Screen Name' style='text-align:center;' class='de'><a href='DeleteScreenName?sn=");
                    snListSB.append(URLEncoder.encode(sn, "UTF-8")).append("' ><img border=0 src='");
                    snListSB.append((String) request.getAttribute("secureAssetURL")).append("/images/delete.gif' width=16 alt='Delete' />");
                    snListSB.append("<b class=hidden> Delete screen name ").append(sn).append("</b></a></td>");
                    snListSB.append("<td style='text-align:center;' headers='Change Account Security Question' class='sn'>");
                    snListSB.append("<a href=change_asq.jsp?sn=").append(URLEncoder.encode(sn, "UTF-8")).append(">");
                    snListSB.append("Change<b class='hidden'> Account Security Question for ").append(sn).append("</b></a></td>");
                    snListSB.append("<td headers=\"screen Name status\" class=\"pc\">").append(snStatus).append("</td></tr>");
                }
            }
        } 
	
        //load linked SNs
        List<String> linkedSNs = null;
        try {
            linkedSNs = AccountAccess.getSession(request, response).getScreenNameModelObj().getListOfAssociatedScreenNames(AccountAccess.getLoginItem(request,"Username"));
        } catch (Exception e) {
            logger.error("Get Linked SNs failed",e);
            e.printStackTrace();
        }
		
        StringBuilder linkedSNlistSB = new StringBuilder(1024);
        if (linkedSNs != null && linkedSNs.size() > 0) {
            if (displayStoredPassword) 
                storedpwString = "<td>&nbsp;</td>";
            else
                storedpwString="";
			
            for (String linkedSN : linkedSNs) {
                linkedSNlistSB.append("<tr").append(alt[snIndex%2]).append(">");
                linkedSNlistSB.append("<td headers='Screen Name' class=\"sn\" title=\"").append(linkedSN).append("\">");
                linkedSNlistSB.append(AccountAccess.processScreenNameLength(linkedSN,30));
                linkedSNlistSB.append("</td>");
                linkedSNlistSB.append("<td>&nbsp;</td>");
                linkedSNlistSB.append("<td style='text-align:center;' headers='Password' class=\"pw\">&nbsp;</td>");
                linkedSNlistSB.append(storedpwString);
                linkedSNlistSB.append("<td headers='delete' class=\"de\">&nbsp;</td><td>&nbsp;</td><td headers='Password' class=\"pw\">&nbsp;</td></tr>");
            }
        } else {
            logger.info("No Linked SNs found");
        }
	    
        if (AccountAccess.getAcctData(request, response).allowAddNewSn(request, response)==false)
            request.setAttribute("reachlimit", "yes");
		
        request.setAttribute("snliststring", snListSB.toString() + linkedSNlistSB.toString());
        request.setAttribute("primarysn", primarySN);
        request.setAttribute("ismasteronly", new Boolean(isMasterSnOnly));
        request.setAttribute("displaystoredpassword", new Boolean(displayStoredPassword));
			
        ArrayList deletedlist = ScreenNames.getDeletedSns(request, response);
        if (deletedlist == null || deletedlist.size() == 0)
            request.setAttribute("allowrestore", "no");
		 
        AccountAccess.updateStats("ScreenNameMain",System.currentTimeMillis()-performancestarttime);
        AccountAccess.dispatchJsp(request, response, "screen_names.jsp");
        return;
		   
    }
}
